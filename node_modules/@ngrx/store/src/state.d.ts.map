{"version":3,"file":"state.d.ts","sources":["state.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ActionsSubject } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\nexport declare abstract class StateObservable extends Observable<any> {\n}\nexport declare class State<T> extends BehaviorSubject<any> implements OnDestroy {\n    static readonly INIT: \"@ngrx/store/init\";\n    private stateSubscription;\n    constructor(actions$: ActionsSubject, reducer$: ReducerObservable, scannedActions: ScannedActionsSubject, initialState: any);\n    ngOnDestroy(): void;\n}\nexport declare type StateActionPair<T, V extends Action = Action> = {\n    state: T | undefined;\n    action?: V;\n};\nexport declare function reduceState<T, V extends Action = Action>(stateActionPair: StateActionPair<T, V> | undefined, [action, reducer]: [V, ActionReducer<T, V>]): StateActionPair<T, V>;\nexport declare const STATE_PROVIDERS: Provider[];\n"]}