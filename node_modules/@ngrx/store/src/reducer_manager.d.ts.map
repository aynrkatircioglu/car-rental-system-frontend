{"version":3,"file":"reducer_manager.d.ts","sources":["reducer_manager.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ActionsSubject } from './actions_subject';\nimport { ActionReducer, ActionReducerFactory, ActionReducerMap, StoreFeature } from './models';\nexport declare abstract class ReducerObservable extends Observable<ActionReducer<any, any>> {\n}\nexport declare abstract class ReducerManagerDispatcher extends ActionsSubject {\n}\nexport declare const UPDATE: \"@ngrx/store/update-reducers\";\nexport declare class ReducerManager extends BehaviorSubject<ActionReducer<any, any>> implements OnDestroy {\n    private dispatcher;\n    private initialState;\n    private reducers;\n    private reducerFactory;\n    constructor(dispatcher: ReducerManagerDispatcher, initialState: any, reducers: ActionReducerMap<any, any>, reducerFactory: ActionReducerFactory<any, any>);\n    addFeature(feature: StoreFeature<any, any>): void;\n    addFeatures(features: StoreFeature<any, any>[]): void;\n    removeFeature(feature: StoreFeature<any, any>): void;\n    removeFeatures(features: StoreFeature<any, any>[]): void;\n    addReducer(key: string, reducer: ActionReducer<any, any>): void;\n    addReducers(reducers: {\n        [key: string]: ActionReducer<any, any>;\n    }): void;\n    removeReducer(featureKey: string): void;\n    removeReducers(featureKeys: string[]): void;\n    private updateReducers;\n    ngOnDestroy(): void;\n}\nexport declare const REDUCER_MANAGER_PROVIDERS: Provider[];\n"]}